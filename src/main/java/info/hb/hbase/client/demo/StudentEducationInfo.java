/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package info.hb.hbase.client.demo;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StudentEducationInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StudentEducationInfo\",\"namespace\":\"zx.soft.apt.hdfs.hbase.demo\",\"fields\":[{\"name\":\"education_unversity\",\"type\":\"string\"},{\"name\":\"education_major\",\"type\":\"string\"},{\"name\":\"education_degree\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence education_unversity;
  @Deprecated public java.lang.CharSequence education_major;
  @Deprecated public java.lang.CharSequence education_degree;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StudentEducationInfo() {}

  /**
   * All-args constructor.
   */
  public StudentEducationInfo(java.lang.CharSequence education_unversity, java.lang.CharSequence education_major, java.lang.CharSequence education_degree) {
    this.education_unversity = education_unversity;
    this.education_major = education_major;
    this.education_degree = education_degree;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return education_unversity;
    case 1: return education_major;
    case 2: return education_degree;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: education_unversity = (java.lang.CharSequence)value$; break;
    case 1: education_major = (java.lang.CharSequence)value$; break;
    case 2: education_degree = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'education_unversity' field.
   */
  public java.lang.CharSequence getEducationUnversity() {
    return education_unversity;
  }

  /**
   * Sets the value of the 'education_unversity' field.
   * @param value the value to set.
   */
  public void setEducationUnversity(java.lang.CharSequence value) {
    this.education_unversity = value;
  }

  /**
   * Gets the value of the 'education_major' field.
   */
  public java.lang.CharSequence getEducationMajor() {
    return education_major;
  }

  /**
   * Sets the value of the 'education_major' field.
   * @param value the value to set.
   */
  public void setEducationMajor(java.lang.CharSequence value) {
    this.education_major = value;
  }

  /**
   * Gets the value of the 'education_degree' field.
   */
  public java.lang.CharSequence getEducationDegree() {
    return education_degree;
  }

  /**
   * Sets the value of the 'education_degree' field.
   * @param value the value to set.
   */
  public void setEducationDegree(java.lang.CharSequence value) {
    this.education_degree = value;
  }

  /** Creates a new StudentEducationInfo RecordBuilder */
  public static info.hb.hbase.client.demo.StudentEducationInfo.Builder newBuilder() {
    return new info.hb.hbase.client.demo.StudentEducationInfo.Builder();
  }
  
  /** Creates a new StudentEducationInfo RecordBuilder by copying an existing Builder */
  public static info.hb.hbase.client.demo.StudentEducationInfo.Builder newBuilder(info.hb.hbase.client.demo.StudentEducationInfo.Builder other) {
    return new info.hb.hbase.client.demo.StudentEducationInfo.Builder(other);
  }
  
  /** Creates a new StudentEducationInfo RecordBuilder by copying an existing StudentEducationInfo instance */
  public static info.hb.hbase.client.demo.StudentEducationInfo.Builder newBuilder(info.hb.hbase.client.demo.StudentEducationInfo other) {
    return new info.hb.hbase.client.demo.StudentEducationInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for StudentEducationInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StudentEducationInfo>
    implements org.apache.avro.data.RecordBuilder<StudentEducationInfo> {

    private java.lang.CharSequence education_unversity;
    private java.lang.CharSequence education_major;
    private java.lang.CharSequence education_degree;

    /** Creates a new Builder */
    private Builder() {
      super(info.hb.hbase.client.demo.StudentEducationInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(info.hb.hbase.client.demo.StudentEducationInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.education_unversity)) {
        this.education_unversity = data().deepCopy(fields()[0].schema(), other.education_unversity);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.education_major)) {
        this.education_major = data().deepCopy(fields()[1].schema(), other.education_major);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.education_degree)) {
        this.education_degree = data().deepCopy(fields()[2].schema(), other.education_degree);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StudentEducationInfo instance */
    private Builder(info.hb.hbase.client.demo.StudentEducationInfo other) {
            super(info.hb.hbase.client.demo.StudentEducationInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.education_unversity)) {
        this.education_unversity = data().deepCopy(fields()[0].schema(), other.education_unversity);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.education_major)) {
        this.education_major = data().deepCopy(fields()[1].schema(), other.education_major);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.education_degree)) {
        this.education_degree = data().deepCopy(fields()[2].schema(), other.education_degree);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'education_unversity' field */
    public java.lang.CharSequence getEducationUnversity() {
      return education_unversity;
    }
    
    /** Sets the value of the 'education_unversity' field */
    public info.hb.hbase.client.demo.StudentEducationInfo.Builder setEducationUnversity(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.education_unversity = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'education_unversity' field has been set */
    public boolean hasEducationUnversity() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'education_unversity' field */
    public info.hb.hbase.client.demo.StudentEducationInfo.Builder clearEducationUnversity() {
      education_unversity = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'education_major' field */
    public java.lang.CharSequence getEducationMajor() {
      return education_major;
    }
    
    /** Sets the value of the 'education_major' field */
    public info.hb.hbase.client.demo.StudentEducationInfo.Builder setEducationMajor(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.education_major = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'education_major' field has been set */
    public boolean hasEducationMajor() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'education_major' field */
    public info.hb.hbase.client.demo.StudentEducationInfo.Builder clearEducationMajor() {
      education_major = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'education_degree' field */
    public java.lang.CharSequence getEducationDegree() {
      return education_degree;
    }
    
    /** Sets the value of the 'education_degree' field */
    public info.hb.hbase.client.demo.StudentEducationInfo.Builder setEducationDegree(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.education_degree = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'education_degree' field has been set */
    public boolean hasEducationDegree() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'education_degree' field */
    public info.hb.hbase.client.demo.StudentEducationInfo.Builder clearEducationDegree() {
      education_degree = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public StudentEducationInfo build() {
      try {
        StudentEducationInfo record = new StudentEducationInfo();
        record.education_unversity = fieldSetFlags()[0] ? this.education_unversity : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.education_major = fieldSetFlags()[1] ? this.education_major : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.education_degree = fieldSetFlags()[2] ? this.education_degree : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
