/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package info.hb.hbase.client.demo;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StudentBaseInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StudentBaseInfo\",\"namespace\":\"zx.soft.apt.hdfs.hbase.demo\",\"fields\":[{\"name\":\"student_age\",\"type\":\"int\"},{\"name\":\"student_sex\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int student_age;
  @Deprecated public java.lang.CharSequence student_sex;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public StudentBaseInfo() {}

  /**
   * All-args constructor.
   */
  public StudentBaseInfo(java.lang.Integer student_age, java.lang.CharSequence student_sex) {
    this.student_age = student_age;
    this.student_sex = student_sex;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return student_age;
    case 1: return student_sex;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: student_age = (java.lang.Integer)value$; break;
    case 1: student_sex = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'student_age' field.
   */
  public java.lang.Integer getStudentAge() {
    return student_age;
  }

  /**
   * Sets the value of the 'student_age' field.
   * @param value the value to set.
   */
  public void setStudentAge(java.lang.Integer value) {
    this.student_age = value;
  }

  /**
   * Gets the value of the 'student_sex' field.
   */
  public java.lang.CharSequence getStudentSex() {
    return student_sex;
  }

  /**
   * Sets the value of the 'student_sex' field.
   * @param value the value to set.
   */
  public void setStudentSex(java.lang.CharSequence value) {
    this.student_sex = value;
  }

  /** Creates a new StudentBaseInfo RecordBuilder */
  public static info.hb.hbase.client.demo.StudentBaseInfo.Builder newBuilder() {
    return new info.hb.hbase.client.demo.StudentBaseInfo.Builder();
  }
  
  /** Creates a new StudentBaseInfo RecordBuilder by copying an existing Builder */
  public static info.hb.hbase.client.demo.StudentBaseInfo.Builder newBuilder(info.hb.hbase.client.demo.StudentBaseInfo.Builder other) {
    return new info.hb.hbase.client.demo.StudentBaseInfo.Builder(other);
  }
  
  /** Creates a new StudentBaseInfo RecordBuilder by copying an existing StudentBaseInfo instance */
  public static info.hb.hbase.client.demo.StudentBaseInfo.Builder newBuilder(info.hb.hbase.client.demo.StudentBaseInfo other) {
    return new info.hb.hbase.client.demo.StudentBaseInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for StudentBaseInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StudentBaseInfo>
    implements org.apache.avro.data.RecordBuilder<StudentBaseInfo> {

    private int student_age;
    private java.lang.CharSequence student_sex;

    /** Creates a new Builder */
    private Builder() {
      super(info.hb.hbase.client.demo.StudentBaseInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(info.hb.hbase.client.demo.StudentBaseInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.student_age)) {
        this.student_age = data().deepCopy(fields()[0].schema(), other.student_age);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.student_sex)) {
        this.student_sex = data().deepCopy(fields()[1].schema(), other.student_sex);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing StudentBaseInfo instance */
    private Builder(info.hb.hbase.client.demo.StudentBaseInfo other) {
            super(info.hb.hbase.client.demo.StudentBaseInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.student_age)) {
        this.student_age = data().deepCopy(fields()[0].schema(), other.student_age);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.student_sex)) {
        this.student_sex = data().deepCopy(fields()[1].schema(), other.student_sex);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'student_age' field */
    public java.lang.Integer getStudentAge() {
      return student_age;
    }
    
    /** Sets the value of the 'student_age' field */
    public info.hb.hbase.client.demo.StudentBaseInfo.Builder setStudentAge(int value) {
      validate(fields()[0], value);
      this.student_age = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'student_age' field has been set */
    public boolean hasStudentAge() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'student_age' field */
    public info.hb.hbase.client.demo.StudentBaseInfo.Builder clearStudentAge() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'student_sex' field */
    public java.lang.CharSequence getStudentSex() {
      return student_sex;
    }
    
    /** Sets the value of the 'student_sex' field */
    public info.hb.hbase.client.demo.StudentBaseInfo.Builder setStudentSex(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.student_sex = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'student_sex' field has been set */
    public boolean hasStudentSex() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'student_sex' field */
    public info.hb.hbase.client.demo.StudentBaseInfo.Builder clearStudentSex() {
      student_sex = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public StudentBaseInfo build() {
      try {
        StudentBaseInfo record = new StudentBaseInfo();
        record.student_age = fieldSetFlags()[0] ? this.student_age : (java.lang.Integer) defaultValue(fields()[0]);
        record.student_sex = fieldSetFlags()[1] ? this.student_sex : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
