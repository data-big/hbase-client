/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package info.hb.hbase.client.demo;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Student extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Student\",\"namespace\":\"zx.soft.apt.hdfs.hbase.demo\",\"fields\":[{\"name\":\"student_id\",\"type\":\"int\"},{\"name\":\"student_base_info\",\"type\":{\"type\":\"record\",\"name\":\"StudentBaseInfo\",\"fields\":[{\"name\":\"student_age\",\"type\":\"int\"},{\"name\":\"student_sex\",\"type\":\"string\"}]}},{\"name\":\"student_education_info\",\"type\":{\"type\":\"record\",\"name\":\"StudentEducationInfo\",\"fields\":[{\"name\":\"education_unversity\",\"type\":\"string\"},{\"name\":\"education_major\",\"type\":\"string\"},{\"name\":\"education_degree\",\"type\":\"string\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int student_id;
  @Deprecated public info.hb.hbase.client.demo.StudentBaseInfo student_base_info;
  @Deprecated public info.hb.hbase.client.demo.StudentEducationInfo student_education_info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Student() {}

  /**
   * All-args constructor.
   */
  public Student(java.lang.Integer student_id, info.hb.hbase.client.demo.StudentBaseInfo student_base_info, info.hb.hbase.client.demo.StudentEducationInfo student_education_info) {
    this.student_id = student_id;
    this.student_base_info = student_base_info;
    this.student_education_info = student_education_info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return student_id;
    case 1: return student_base_info;
    case 2: return student_education_info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: student_id = (java.lang.Integer)value$; break;
    case 1: student_base_info = (info.hb.hbase.client.demo.StudentBaseInfo)value$; break;
    case 2: student_education_info = (info.hb.hbase.client.demo.StudentEducationInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'student_id' field.
   */
  public java.lang.Integer getStudentId() {
    return student_id;
  }

  /**
   * Sets the value of the 'student_id' field.
   * @param value the value to set.
   */
  public void setStudentId(java.lang.Integer value) {
    this.student_id = value;
  }

  /**
   * Gets the value of the 'student_base_info' field.
   */
  public info.hb.hbase.client.demo.StudentBaseInfo getStudentBaseInfo() {
    return student_base_info;
  }

  /**
   * Sets the value of the 'student_base_info' field.
   * @param value the value to set.
   */
  public void setStudentBaseInfo(info.hb.hbase.client.demo.StudentBaseInfo value) {
    this.student_base_info = value;
  }

  /**
   * Gets the value of the 'student_education_info' field.
   */
  public info.hb.hbase.client.demo.StudentEducationInfo getStudentEducationInfo() {
    return student_education_info;
  }

  /**
   * Sets the value of the 'student_education_info' field.
   * @param value the value to set.
   */
  public void setStudentEducationInfo(info.hb.hbase.client.demo.StudentEducationInfo value) {
    this.student_education_info = value;
  }

  /** Creates a new Student RecordBuilder */
  public static info.hb.hbase.client.demo.Student.Builder newBuilder() {
    return new info.hb.hbase.client.demo.Student.Builder();
  }
  
  /** Creates a new Student RecordBuilder by copying an existing Builder */
  public static info.hb.hbase.client.demo.Student.Builder newBuilder(info.hb.hbase.client.demo.Student.Builder other) {
    return new info.hb.hbase.client.demo.Student.Builder(other);
  }
  
  /** Creates a new Student RecordBuilder by copying an existing Student instance */
  public static info.hb.hbase.client.demo.Student.Builder newBuilder(info.hb.hbase.client.demo.Student other) {
    return new info.hb.hbase.client.demo.Student.Builder(other);
  }
  
  /**
   * RecordBuilder for Student instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Student>
    implements org.apache.avro.data.RecordBuilder<Student> {

    private int student_id;
    private info.hb.hbase.client.demo.StudentBaseInfo student_base_info;
    private info.hb.hbase.client.demo.StudentEducationInfo student_education_info;

    /** Creates a new Builder */
    private Builder() {
      super(info.hb.hbase.client.demo.Student.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(info.hb.hbase.client.demo.Student.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.student_id)) {
        this.student_id = data().deepCopy(fields()[0].schema(), other.student_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.student_base_info)) {
        this.student_base_info = data().deepCopy(fields()[1].schema(), other.student_base_info);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.student_education_info)) {
        this.student_education_info = data().deepCopy(fields()[2].schema(), other.student_education_info);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Student instance */
    private Builder(info.hb.hbase.client.demo.Student other) {
            super(info.hb.hbase.client.demo.Student.SCHEMA$);
      if (isValidValue(fields()[0], other.student_id)) {
        this.student_id = data().deepCopy(fields()[0].schema(), other.student_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.student_base_info)) {
        this.student_base_info = data().deepCopy(fields()[1].schema(), other.student_base_info);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.student_education_info)) {
        this.student_education_info = data().deepCopy(fields()[2].schema(), other.student_education_info);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'student_id' field */
    public java.lang.Integer getStudentId() {
      return student_id;
    }
    
    /** Sets the value of the 'student_id' field */
    public info.hb.hbase.client.demo.Student.Builder setStudentId(int value) {
      validate(fields()[0], value);
      this.student_id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'student_id' field has been set */
    public boolean hasStudentId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'student_id' field */
    public info.hb.hbase.client.demo.Student.Builder clearStudentId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'student_base_info' field */
    public info.hb.hbase.client.demo.StudentBaseInfo getStudentBaseInfo() {
      return student_base_info;
    }
    
    /** Sets the value of the 'student_base_info' field */
    public info.hb.hbase.client.demo.Student.Builder setStudentBaseInfo(info.hb.hbase.client.demo.StudentBaseInfo value) {
      validate(fields()[1], value);
      this.student_base_info = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'student_base_info' field has been set */
    public boolean hasStudentBaseInfo() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'student_base_info' field */
    public info.hb.hbase.client.demo.Student.Builder clearStudentBaseInfo() {
      student_base_info = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'student_education_info' field */
    public info.hb.hbase.client.demo.StudentEducationInfo getStudentEducationInfo() {
      return student_education_info;
    }
    
    /** Sets the value of the 'student_education_info' field */
    public info.hb.hbase.client.demo.Student.Builder setStudentEducationInfo(info.hb.hbase.client.demo.StudentEducationInfo value) {
      validate(fields()[2], value);
      this.student_education_info = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'student_education_info' field has been set */
    public boolean hasStudentEducationInfo() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'student_education_info' field */
    public info.hb.hbase.client.demo.Student.Builder clearStudentEducationInfo() {
      student_education_info = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Student build() {
      try {
        Student record = new Student();
        record.student_id = fieldSetFlags()[0] ? this.student_id : (java.lang.Integer) defaultValue(fields()[0]);
        record.student_base_info = fieldSetFlags()[1] ? this.student_base_info : (info.hb.hbase.client.demo.StudentBaseInfo) defaultValue(fields()[1]);
        record.student_education_info = fieldSetFlags()[2] ? this.student_education_info : (info.hb.hbase.client.demo.StudentEducationInfo) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
